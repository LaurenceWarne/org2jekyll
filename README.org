#+title: org2jekyll
#+author: ardumont

[[https://travis-ci.org/ardumont/org2jekyll][https://travis-ci.org/ardumont/org2jekyll.svg]]

Blogging with org-mode and jekyll without alien yaml headers.

* Table of Contents                                                     :TOC:
 - [[#description][Description]]
     - [[#rationale][Rationale]]
     - [[#pre-requisite][Pre-requisite]]
 - [[#installsetup][Install/Setup]]
     - [[#install][Install]]
     - [[#setup][Setup]]
     - [[#a-working-example][A working example]]
 - [[#use][Use]]
     - [[#post][Post]]
     - [[#page][Page]]
     - [[#whats-going-on][What's going on?]]
     - [[#publish-all-posts][Publish all posts]]
     - [[#publish-all-pages][Publish all pages]]
 - [[#minor-mode][Minor mode]]

* Description

Let *org2jekyll* export your org-mode file to jekyll.

What's the difference with [[https://github.com/juanre/org-jekyll][org-jekyll]]?

You don't need to add some alien yaml in your org-mode file.
You add specific org-mode headers and this will be used to format the jekyll post.

What's the difference with [[https://github.com/bmaland/happyblogger][happyblogger]]?

Only emacs' dependencies (org, etc...) no external ruby script.

** Rationale

- [[http://orgmode.org/][org-mode]] rocks
- Github uses [[http://jekyllrb.com/][Jekyll]]
- [[http://jekyllrb.com/][Jekyll]] is nice
- Existing solutions regarding org-mode and jekyll needs the org-mode files to be altered with non-org notations to work together
- I don't want to alter my org-mode files with alien yaml headers to satisfy jekyll

Enters org2jekyll.

** Pre-requisite

You have:
- your [[http://orgmode.org/worg/org-tutorials/org-publish-html-tutorial.html][*org-publish*]] setup ready.
- a running [[http://github.com/mojombo/jekyll][jekyll]] installation
* Install/Setup

** Install

Available only on [[https://marmalade-repo.org/][marmalade]] for the moment.
Update your packages archive with marmalade:

#+begin_src emacs-lisp
(require 'package)
(add-to-list 'package-archives '("marmalade" . "https://marmalade-repo.org/packages") t)
(package-initialize)
#+end_src

/M-x package-install RET org2jekyll RET/

** Setup

/M-x customize-group RET org2jekyll RET/

Here is an example of my configuration for my [[http://ardumont.github.io/][blog site]]:
#+begin_src emacs-lisp
(require 'org)
(require 'org2jekyll)

(custom-set-variables '(org2jekyll/blog-author       "ardumont")
                      '(org2jekyll/source-directory  (expand-file-name "~/org/"))
                      '(org2jekyll/jekyll-directory  (expand-file-name "~/public_html/"))
                      '(org2jekyll/jekyll-drafts-dir "_drafts/")
                      '(org2jekyll/jekyll-posts-dir  "_posts/")
                      '(org-publish-project-alist
                        `(("default"
                           :base-directory ,(org2jekyll/input-directory)
                           :base-extension "org"
                           :publishing-directory ,(org2jekyll/output-directory)
                           :publishing-function org-html-publish-to-html
                           :headline-levels 4
                           :section-numbers nil
                           :with-toc nil
                           :html-preamble t
                           :recursive t
                           :make-index t
                           :html-extension "html"
                           :body-only t)

                          ("post"
                           :base-directory ,(org2jekyll/input-directory)
                           :base-extension "org"
                           :publishing-directory ,(org2jekyll/output-directory org2jekyll/jekyll-posts-dir)
                           :publishing-function org-html-publish-to-html
                           :headline-levels 4
                           :section-numbers nil
                           :with-toc nil
                           :html-preamble t
                           :recursive t
                           :make-index t
                           :html-extension "html"
                           :body-only t)

                          ("images"
                           :base-directory ,(org2jekyll/input-directory "img")
                           :base-extension "jpg\\|gif\\|png"
                           :publishing-directory ,(org2jekyll/output-directory "img")
                           :publishing-function org-publish-attachment)

                          ("js"
                           :base-directory ,(org2jekyll/input-directory "js")
                           :base-extension "js"
                           :publishing-directory ,(org2jekyll/output-directory "js")
                           :publishing-function org-publish-attachment)

                          ("other"
                           :base-directory ,(org2jekyll/input-directory "css")
                           :base-extension "css\\|el"
                           :publishing-directory ,(org2jekyll/output-directory "css")
                           :publishing-function org-publish-attachment)

                          ("website" :components ("default" "post" "images" "js" "css")))))
#+end_src

*default* and *post* are important entries which represent the possible jekyll layout you use in your jekyll installation.
Name it as you want, just refer to it in your #+LAYOUT entry after that.

** A working example

- blog: [[http://ardumont.github.io/]]

- jekyll exported source: https://github.com/ardumont/ardumont.github.io

- the org files: https://github.com/ardumont/org.git

*Note* Yes, I may have to merge the last 2 repositories at some point...

* Use

Add some org headers to your org files.

** Post

Add some org headers in your org-mode file for a blog post:

#+begin_src org
#+STARTUP: showall
#+STARTUP: hidestars
#+OPTIONS: H:2 num:nil tags:nil toc:nil timestamps:t
#+LAYOUT: post
#+AUTHOR: ardumont
#+DATE: 2014-12-19 Fri 23:49
#+TITLE: hello
#+DESCRIPTION: some description
#+CATEGORIES: some-category
#+end_src

To easily do that, /M-x org2jekyll/create-draft!/, this will ask you for everything needed and create a file with such metadata.

Now create your article and publish it when ready /M-x org2jekyll/publish!/.

This will be published as post article.

*Note* the *#+LAYOUT* entry refers to the *post* entry in *org-publish-project-alist*.

** Page

A simple page.

Add some org headers in your org-mode file for a blog post:

#+begin_src org
#+STARTUP: showall
#+STARTUP: hidestars
#+OPTIONS: H:2 num:nil tags:nil toc:nil timestamps:t
#+LAYOUT: default
#+AUTHOR: ardumont
#+DATE: 2014-12-19 Fri 23:49
#+TITLE: hello
#+DESCRIPTION: some description
#+CATEGORIES: some-category
#+end_src

Now create your article and publish it when ready /M-x org2jekyll/publish!/.

This will be published as page article.

*Note* the *#+LAYOUT* entry refers to the *default* entry in *org-publish-project-alist*.

** What's going on?

This will generate another org-mode with the necessary yaml and publish to the jekyll directory (according to your org-publish setup).
Then your jekyll will be in charge of rendering accordingly.

** Publish all posts

*M-x org2jekyll/publish-posts!*

** Publish all pages

*M-x org2jekyll/publish-pages!*
* Minor mode

org2jekyll proposes you a minor with the following default binding:
#+begin_src emacs-lisp
(setq org2jekyll-mode-map
      (let ((map (make-sparse-keymap)))
        (define-key map (kbd "C-c . n") 'org2jekyll/create-draft!)
        (define-key map (kbd "C-c . p") 'org2jekyll/publish-post!)
        (define-key map (kbd "C-c . P") 'org2jekyll/publish-posts!)
        (define-key map (kbd "C-c . l") 'org2jekyll/list-posts)
        (define-key map (kbd "C-c . d") 'org2jekyll/list-drafts)
        map))
#+end_src

*Note* [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Key-Binding-Conventions.html#Key-Binding-Conventions][Respecting the default minor mode convention for binding]]

To (de)activate this in an org file: /M-x org2jekyll-mode/

As usual, you can use emacs' power to setup your own bindings.
