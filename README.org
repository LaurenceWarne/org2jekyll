#+title: org2jekyll
#+author: ardumont

Blogging with org-mode and jekyll without strange yaml headers.

* Description

Let `org2jekyll` export your org-mode file to jekyll.

What's the difference with [[https://github.com/juanre/org-jekyll][org-jekyll]]?

You don't need to add some alien yaml in your org-mode file.
You add specific org-mode headers and this will be used to format the jekyll post.

What's the difference with [[https://github.com/bmaland/happyblogger][happyblogger]]?

Only emacs' dependencies (org, etc...) no external ruby script.

* Pre-requisite

You have:
- your `org-publish` ready.
- a running [[http://github.com/mojombo/jekyll][jekyll]] installation

Here is an example of my configuration:
#+begin_src emacs-lisp
(require 'org)
(require 'org2jekyll)

(custom-set-variables '(org2jekyll/blog-entry "tony-blog")
                      '(org2jekyll/blog-author "ardumont")
                      '(org2jekyll/source-directory  (expand-file-name "~/org/"))
                      '(org2jekyll/jekyll-directory  (expand-file-name "~/public_html/"))
                      '(org2jekyll/jekyll-drafts-dir "_drafts/")
                      '(org2jekyll/jekyll-posts-dir  "_posts/")
                      '(org-publish-project-alist
                        `(("tony-blog"
                           :base-directory ,(org2jekyll/input-directory)
                           :base-extension "org"
                           :publishing-directory ,(org2jekyll/output-directory "_posts")
                           :publishing-function org-html-publish-to-html
                           :headline-levels 4
                           :section-numbers nil
                           :with-toc nil
                           :html-head "<link rel=\"stylesheet\" href=\"./css/style.css\" type=\"text/css\"/>"
                           :html-preamble t
                           :recursive t
                           :make-index t
                           :html-extension "html"
                           :body-only t)

                          ("images"
                           :base-directory ,(org2jekyll/input-directory "img")
                           :base-extension "jpg\\|gif\\|png"
                           :publishing-directory ,(org2jekyll/output-directory "img")
                           :publishing-function org-publish-attachment)

                          ("js"
                           :base-directory ,(org2jekyll/input-directory "js")
                           :base-extension "js"
                           :publishing-directory ,(org2jekyll/output-directory "js")
                           :publishing-function org-publish-attachment)

                          ("other"
                           :base-directory ,(org2jekyll/input-directory "css")
                           :base-extension "css\\|el"
                           :publishing-directory ,(org2jekyll/output-directory "css")
                           :publishing-function org-publish-attachment)

                          ("website" :components ("org" "tony-blog" "images" "js" "css")))))
#+end_src

`tony-blog` is an important entry here which will be used when publishing the post.
Name it as you want, just refer to it in your #+BLOG entry after that.

** Example

- blog: [[http://ardumont.github.io/blog/]] (the style is ugly as hell right now but the technicals which is described here work)

- source: https://github.com/ardumont/ardumont.github.io

* Rationale

- Standard org-mode rocks
- Github uses jekyll
- Jekyll is nice
- Existing solutions regarding org-mode and jekyll needs the org-mode files to be altered with non-org notations to work together
- I don't want to alter my org-mode files with alien yaml headers to satisfy jekyll

Enters org2jekyll.

* How

Add some org headers in your org-mode file:

#+begin_src org
#+BLOG: tony-blog
#+LAYOUT: post
#+AUTHOR: ardumont
#+DATE: 2014-12-19 Fri 23:49
#+STARTUP: showall
#+STARTUP: hidestars
#+OPTIONS: H:2 num:nil tags:nil toc:1 timestamps:t
#+LAYOUT: post
#+TITLE: hello
#+DESCRIPTION: some description
#+CATEGORIES: some-category
#+end_src

To easily do that, <kbd>M-x org2jekyll/create-draft!</kbd>, this will ask you for everything needed and create a file with such metadata.

Now create your article and publish it when ready <kbd>M-x org2jekyll/publish-post!</kbd>.

*Note* the `#+BLOG` entry refers to the `tony-blog` entry in `org-publish-project-alist`.

* What's going on?

This will generate another org-mode with the necessary yaml and publish to the jekyll directory.
Then your jekyll will be in charge of rendering accordingly.
